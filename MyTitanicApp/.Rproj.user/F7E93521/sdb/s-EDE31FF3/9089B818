{
    "collab_server" : "",
    "contents" : "source(\"init.R\")\nsource(\"preprocess.R\")\nsource(\"functions_server.R\")\n\nshinyServer(function(input, output) {\n \n  output$titanic <- renderDataTable({\n    titanic\n  }, options = list(bSortClasses = TRUE))\n  \n  \n  output$dataPlot1 <- renderPlot({\n    par(mfrow = c(2,3))\n    barplot(propsurvivor(\"pclass\"), main = \"Survival Rates by Pclass\", xlab = \"pclass\", ylab = \"Percent Survived or Perished\", col = c(\"blue\", \"gray\"))\n    barplot(propsurvivor(\"sex\"), main = \"Survival Rates by Sex\", xlab = \"sex\", ylab = \"Percent Survived or Perished\", col = c(\"blue\", \"gray\"))\n    barplot(propsurvivor(\"sibsp\"), main = \"Survival Rates by Sibps\", xlab = \"sex\", ylab = \"Percent Survived or Perished\", col = c(\"blue\", \"gray\"))\n    barplot(propsurvivor(\"parch\"), main = \"Survival Rates by Parch\", xlab = \"sex\", ylab = \"Percent Survived or Perished\", col = c(\"blue\", \"gray\"))\n    barplot(propsurvivor(\"embarked\"), main = \"Survival Rates by Embarked\", xlab = \"sex\", ylab = \"Percent Survived or Perished\", col = c(\"blue\", \"gray\"))\n    #barplot(propsurvivor(\"sex\"), main = \"Survival Rates by Sex\", xlab = \"sex\", ylab = \"Percent Survived or Perished\", col = c(\"blue\", \"gray\"))\n    \n    \n    \n    \n    \n  })\n  \n  \n  \n  \n  output$dataPlot2 <- renderPlot({\n    \n    \n    p <- ggplot(titanic, aes_string(x=input$x, y=input$y)) + geom_point()\n    \n    if (input$color != 'None')\n      p <- p + aes_string(color=input$color)\n    \n    facets <- paste(input$facet_row, '~', input$facet_col)\n    if (facets != '. ~ .')\n      p <- p + facet_grid(facets)\n    \n    if (input$jitter)\n      p <- p + geom_jitter()\n    if (input$smooth)\n      p <- p + geom_smooth()\n    \n    print(p)\n  })\n\n  output$dataplot3 <- renderPlot({\n        \n    p1<-ggplot(titanic, aes(age, fill = survived)) +  geom_histogram(bins  = input$agecat)  \n    p1 <- p1 + labs( title = \"Survival by Age Categories\")\n    p1 <- p1 + theme(plot.title = element_text(size=18, face=\"bold\", margin = margin(10, 0, 10, 0)))\n    \n    p2<-ggplot(titanic, aes(age, fill = pclass), alpha=I(.5)) +  geom_density()\n    p2 <- p2 + labs( title = \"Class repartition by Age\")\n    p2 <- p2 + theme(plot.title = element_text(size=18, face=\"bold\", margin = margin(10, 0, 10, 0)))\n    \n    p <- grid.arrange(p1, p2, ncol=2)\n    \n    print(p)  \n    \n    \n  })\n  output$dataplot4 <- renderPlot({\n    \n    p1<-ggplot(titanic, aes(fare, fill = survived)) +  geom_histogram(bins  = input$farecat)  \n    p1 <- p1 + labs( title = \"Survival by Fare Categories\")\n    p1 <- p1 + theme(plot.title = element_text(size=18, face=\"bold\", margin = margin(10, 0, 10, 0)))\n    \n    p2<-ggplot(titanic, aes(fare, fill = pclass), alpha=I(.5)) +  geom_density()\n    p2 <- p2 + labs( title = \"Class repartition by Fare\")\n    p2 <- p2 + theme(plot.title = element_text(size=18, face=\"bold\", margin = margin(10, 0, 10, 0)))\n    \n    p <- grid.arrange(p1, p2, ncol=2)\n    \n    print(p)  \n    \n    \n  }) \n\n  paramsdt <- reactive({\n    par <-NULL     \n    par <- paste(input$Paramsdt, collapse=\"+\")\n          \n    return(par)     \n  })\n  paramsrf <- reactive({\n    par <-NULL     \n    par <- paste(input$Paramsrf, collapse=\"+\")\n    \n    return(par)     \n  })\n  ncv <- reactive({\n         \n    cv <- input$ncv\n    \n    return(cv)     \n  })\n \n  \n  mymodel <- reactive({\n    \n     r<-NULL\n    if(input$modelType == 'dt')\n    {\n      \n      m <- c(\"dt\")\n      r<- retmodeldt(m,params = paramsdt())\n      return(r)\n    }\n   \n     if(input$modelType == 'rf')\n     {\n       \n       m <- c(\"rf\")\n       r<- retmodelrf(m,paramsrf(),ncv())\n       return(r)\n     }\n     \n     #r<-retmodel(input$modelType,params())\n    \n  })\n  \n \n  output$modelPlot <- renderPlot({mymodel()$plot})\n  output$modelModel  <- renderPrint({mymodel()$model})\n  output$modelSummary  <- renderPrint({mymodel()$summary})\n  output$modelConfMat  <- renderPrint({mymodel()$conf})\n  \n  \n  output$AreYouSurvivor <- renderText({\n                \n                toTest <- data.frame(sex=input$Sex, age=input$Age, pclass=input$Pclass, sibsp=input$Siblings,\n                                     fare=input$Fare, embarked=input$Embarked, familysize = input$FamilySize)\n                #toTest$pclass<-factor(toTest$Pclass, levels=c(1,2,3), labels=c(\"First class\", \"Second class\", \"Third class\"))\n                #the model is the last one selected in the models panel\n                #print(\"model selectionÃ©\")\n                #summary(mymodel()$model$finalModel)\n                Prediction <- predict(mymodel()$model$finalModel, toTest, type=\"class\")\n                # write.csv(Prediction, \"prediction.csv\")\n                return(as.character(Prediction))\n  })\n})\n",
    "created" : 1477382278290.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "97064362",
    "id" : "9089B818",
    "lastKnownWriteTime" : 1477422505,
    "last_content_update" : 1477422505780,
    "path" : "D:/Developpement/R/MyTitanic/Apps/MyTitanicApp/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}